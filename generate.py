import argparse
from utils.generate import generate_img
from utils.data import is_valid_array, create_frames
from path import paths

def parse_opt():
    
    parser = argparse.ArgumentParser()
    parser.add_argument('--mean',type=float,default=0.5,help="The noisy img will be generated following a normal distribution with the set mean.")
    parser.add_argument('--std',type=float,default=0.3,help="The noisy img will be generated following a normal distribution with the set standard deviation.")
    parser.add_argument('--img_number',type=int,default=20,help="The number of images to be generated by the algorithm.")
    parser.add_argument('--show_img',type=bool,default=False)
    parser.add_argument('--show_discriminator_output',type=bool,default=False)
    parser.add_argument('--selected_numbers',type=int,default=[i for i in range(10)],help="The numbers in the images to be generated. More numbers will make the training take more time",nargs="+")
    
    opt = parser.parse_args()
    print(vars(opt))
    
    return opt

if __name__ == "__main__":

    opt = parse_opt()
    parameters = vars(opt)
    
    assert is_valid_array(parameters['selected_numbers']), "The select_numbers input passed is not valid. Check if all numbers are ranging from 0 to 9"
    selected_numbers = parameters['selected_numbers']
 
    print('Starting to generate images...')
    generate_img(**vars(opt))

    # Save frames as a GIF
    create_frames(paths['generated_imgs'])
         